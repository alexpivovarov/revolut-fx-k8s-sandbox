############################################
# Service basics
############################################

# HTTP port for order-service
server.port=8082

# Service name used in logs/metrics/tracing
spring.application.name=order-service

# Expose Actuator endpoints over HTTP for health checks and monitoring.
# - health:  /actuator/health
# - info:    /actuator/info
# - prometheus: /actuator/prometheus (requires micrometer-registry-prometheus on classpath)
management.endpoints.web.exposure.include=health,info,prometheus


############################################
# Resilience4j configuration for QuoteClient
# Your QuoteClient uses @CircuitBreaker and @Retry.
# These settings define when to open the circuit, how many retries, etc.
############################################

# Register a health indicator for the circuit breaker at /actuator/health
resilience4j.circuitbreaker.instances.quoteService.registerHealthIndicator=true

# Use a COUNT-based sliding window (N calls observed)
resilience4j.circuitbreaker.instances.quoteService.slidingWindowType=COUNT_BASED

# Window size: evaluate last 10 calls
resilience4j.circuitbreaker.instances.quoteService.slidingWindowSize=10

# Open the circuit if >= 50% of calls fail within the window
resilience4j.circuitbreaker.instances.quoteService.failureRateThreshold=50

# Keep circuit OPEN for 10s before trying half-open
resilience4j.circuitbreaker.instances.quoteService.waitDurationInOpenState=10s

# When half-open, allow 3 trial calls to decide whether to close or re-open
resilience4j.circuitbreaker.instances.quoteService.permittedNumberOfCallsInHalfOpenState=3

# Retry transient failures up to 3 attempts with 200ms wait between attempts
resilience4j.retry.instances.quoteService.maxAttempts=3
resilience4j.retry.instances.quoteService.waitDuration=200ms

# Treat these exceptions as retryable (connection timeouts, IO issues, etc.)
resilience4j.retry.instances.quoteService.retryExceptions=\
java.io.IOException,java.net.ConnectException,org.springframework.web.reactive.function.client.WebClientRequestException

# Time limiter for reactive calls — fail if the call doesn't complete within 2s
resilience4j.timelimiter.instances.quoteService.timeoutDuration=2s


############################################
# Tracing (OpenTelemetry) — OPTIONAL in local dev
# If no collector is running locally, either disable tracing or point to a real endpoint.
############################################

# Sample all requests (1.0 = 100%). Reduce in prod to control volume.
management.tracing.sampling.probability=1.0

# OTLP HTTP endpoint for sending traces (4318). Requires an OTEL Collector reachable at this URL.
management.otlp.tracing.endpoint=http://otel-collector:4318/v1/traces

# If you don't have a collector running locally, uncomment the next line to silence warnings:
# management.tracing.enabled=false
